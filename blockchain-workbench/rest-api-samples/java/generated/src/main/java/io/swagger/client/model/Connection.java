/*
 * Azure Blockchain Workbench REST API
 * The Azure Blockchain Workbench REST API is a Workbench extensibility point, which allows developers to create and manage blockchain applications, manage users and organizations within a consortium, integrate blockchain applications into services and platforms, perform transactions on a blockchain, and retrieve transactional and contract data from a blockchain.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Connection
 */

public class Connection {
  @SerializedName("connectionID")
  private Integer connectionID = null;

  @SerializedName("ledgerID")
  private Integer ledgerID = null;

  @SerializedName("endpointURL")
  private String endpointURL = null;

  @SerializedName("fundingAccount")
  private String fundingAccount = null;

  public Connection connectionID(Integer connectionID) {
    this.connectionID = connectionID;
    return this;
  }

   /**
   * Get connectionID
   * @return connectionID
  **/
  @ApiModelProperty(value = "")
  public Integer getConnectionID() {
    return connectionID;
  }

  public void setConnectionID(Integer connectionID) {
    this.connectionID = connectionID;
  }

  public Connection ledgerID(Integer ledgerID) {
    this.ledgerID = ledgerID;
    return this;
  }

   /**
   * Get ledgerID
   * @return ledgerID
  **/
  @ApiModelProperty(value = "")
  public Integer getLedgerID() {
    return ledgerID;
  }

  public void setLedgerID(Integer ledgerID) {
    this.ledgerID = ledgerID;
  }

  public Connection endpointURL(String endpointURL) {
    this.endpointURL = endpointURL;
    return this;
  }

   /**
   * Get endpointURL
   * @return endpointURL
  **/
  @ApiModelProperty(value = "")
  public String getEndpointURL() {
    return endpointURL;
  }

  public void setEndpointURL(String endpointURL) {
    this.endpointURL = endpointURL;
  }

  public Connection fundingAccount(String fundingAccount) {
    this.fundingAccount = fundingAccount;
    return this;
  }

   /**
   * Get fundingAccount
   * @return fundingAccount
  **/
  @ApiModelProperty(value = "")
  public String getFundingAccount() {
    return fundingAccount;
  }

  public void setFundingAccount(String fundingAccount) {
    this.fundingAccount = fundingAccount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Connection connection = (Connection) o;
    return Objects.equals(this.connectionID, connection.connectionID) &&
        Objects.equals(this.ledgerID, connection.ledgerID) &&
        Objects.equals(this.endpointURL, connection.endpointURL) &&
        Objects.equals(this.fundingAccount, connection.fundingAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionID, ledgerID, endpointURL, fundingAccount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Connection {\n");
    
    sb.append("    connectionID: ").append(toIndentedString(connectionID)).append("\n");
    sb.append("    ledgerID: ").append(toIndentedString(ledgerID)).append("\n");
    sb.append("    endpointURL: ").append(toIndentedString(endpointURL)).append("\n");
    sb.append("    fundingAccount: ").append(toIndentedString(fundingAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

