/*
 * Azure Blockchain Workbench REST API
 * The Azure Blockchain Workbench REST API is a Workbench extensibility point, which allows developers to create and manage blockchain applications, manage users and organizations within a consortium, integrate blockchain applications into services and platforms, perform transactions on a blockchain, and retrieve transactional and contract data from a blockchain.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UserChainMapping
 */

public class UserChainMapping {
  @SerializedName("userChainMappingID")
  private Integer userChainMappingID = null;

  @SerializedName("userID")
  private Integer userID = null;

  @SerializedName("connectionID")
  private Integer connectionID = null;

  @SerializedName("chainIdentifier")
  private String chainIdentifier = null;

  @SerializedName("chainBalance")
  private Double chainBalance = null;

  public UserChainMapping userChainMappingID(Integer userChainMappingID) {
    this.userChainMappingID = userChainMappingID;
    return this;
  }

   /**
   * Get userChainMappingID
   * @return userChainMappingID
  **/
  @ApiModelProperty(value = "")
  public Integer getUserChainMappingID() {
    return userChainMappingID;
  }

  public void setUserChainMappingID(Integer userChainMappingID) {
    this.userChainMappingID = userChainMappingID;
  }

  public UserChainMapping userID(Integer userID) {
    this.userID = userID;
    return this;
  }

   /**
   * Get userID
   * @return userID
  **/
  @ApiModelProperty(value = "")
  public Integer getUserID() {
    return userID;
  }

  public void setUserID(Integer userID) {
    this.userID = userID;
  }

  public UserChainMapping connectionID(Integer connectionID) {
    this.connectionID = connectionID;
    return this;
  }

   /**
   * Get connectionID
   * @return connectionID
  **/
  @ApiModelProperty(value = "")
  public Integer getConnectionID() {
    return connectionID;
  }

  public void setConnectionID(Integer connectionID) {
    this.connectionID = connectionID;
  }

  public UserChainMapping chainIdentifier(String chainIdentifier) {
    this.chainIdentifier = chainIdentifier;
    return this;
  }

   /**
   * Get chainIdentifier
   * @return chainIdentifier
  **/
  @ApiModelProperty(value = "")
  public String getChainIdentifier() {
    return chainIdentifier;
  }

  public void setChainIdentifier(String chainIdentifier) {
    this.chainIdentifier = chainIdentifier;
  }

  public UserChainMapping chainBalance(Double chainBalance) {
    this.chainBalance = chainBalance;
    return this;
  }

   /**
   * Get chainBalance
   * @return chainBalance
  **/
  @ApiModelProperty(value = "")
  public Double getChainBalance() {
    return chainBalance;
  }

  public void setChainBalance(Double chainBalance) {
    this.chainBalance = chainBalance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserChainMapping userChainMapping = (UserChainMapping) o;
    return Objects.equals(this.userChainMappingID, userChainMapping.userChainMappingID) &&
        Objects.equals(this.userID, userChainMapping.userID) &&
        Objects.equals(this.connectionID, userChainMapping.connectionID) &&
        Objects.equals(this.chainIdentifier, userChainMapping.chainIdentifier) &&
        Objects.equals(this.chainBalance, userChainMapping.chainBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userChainMappingID, userID, connectionID, chainIdentifier, chainBalance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserChainMapping {\n");
    
    sb.append("    userChainMappingID: ").append(toIndentedString(userChainMappingID)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    connectionID: ").append(toIndentedString(connectionID)).append("\n");
    sb.append("    chainIdentifier: ").append(toIndentedString(chainIdentifier)).append("\n");
    sb.append("    chainBalance: ").append(toIndentedString(chainBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

