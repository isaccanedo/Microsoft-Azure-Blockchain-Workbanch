/*
 * Azure Blockchain Workbench REST API
 * The Azure Blockchain Workbench REST API is a Workbench extensibility point, which allows developers to create and manage blockchain applications, manage users and organizations within a consortium, integrate blockchain applications into services and platforms, perform transactions on a blockchain, and retrieve transactional and contract data from a blockchain.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Me;
import io.swagger.client.model.User;
import io.swagger.client.model.UserInput;
import io.swagger.client.model.UserList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Ignore
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    
    /**
     * 
     *
     * Returns the current user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void meGetTest() throws ApiException {
        Me response = api.meGet();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes the specified user. This method can only be performed by users who are Workbench administrators.              NOTE: Not currently implemented.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userDeleteTest() throws ApiException {
        String userID = null;
        api.userDelete(userID);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets the user matching a specific user ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userGetTest() throws ApiException {
        Integer userID = null;
        User response = api.userGet(userID);

        // TODO: test validations
    }
    
    /**
     * Get Users
     *
     * Lists all users within the connected blockchain consortium.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usersGetTest() throws ApiException {
        Integer top = null;
        Integer skip = null;
        String externalId = null;
        String userChainIdentifier = null;
        UserList response = api.usersGet(top, skip, externalId, userChainIdentifier);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Adds a user to the blockchain consortium. This method can only be performed by users who are              Workbench administrators.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usersPostTest() throws ApiException {
        UserInput userInput = null;
        Integer response = api.usersPost(userInput);

        // TODO: test validations
    }
    
}
